#!/usr/bin/env bash
#
# This script reads the .tfconfig file in the current directory and outputs a Terraform file (default config.tf) that
# contains AWS backend and provider configurations. The AWS CLI must be installed and configured in order to read the
# secret value from Amazon Secrets Manager.
#
# An example .tfconfig file with _all_ allowed options specified follow:
#
#   {
#     "key": "example.tfstate",
#     "profile": "default",
#     "secret": "terraform",
#     "target": "config.tf",
#     "extra_regions": [
#       "us-east-2",
#       "us-west"
#     ]
#   }
#
# An explanation of each allowed field:
#
#   .key           -- The S3 blob to read for state storage. Usually ends in .tfstate. Required.
#   .profile       -- The AWS CLI profile name to use. Optional, defaults to "default".
#   .secret        -- The name of the secret to read to get the configuration values. Optional, defaults to "terraform".
#   .target        -- The name of the terraform file to write. Optional, defaults to "config.tf".
#   .extra_regions -- An array of region names. Each region gets its own provider block where the provider alias is the
#                     same as the region name. Optional, defaults to [].
#
# The simplest .tfconfig file is:
#
#   {
#     "key": "mykey.tfstate"
#   }
set -eu

[[ ${#} -ne 0 ]] && echo "${0} takes no arguments!" && exit 1
[[ ! -e ".tfconfig" ]] && echo ".tfconfig file not found!" && exit 1

# Read the .tfconfig file and extract the configuration information.
KEY="$(jq --exit-status --raw-output .key .tfconfig)"
PROFILE="$(jq --raw-output '.profile // "default"' .tfconfig)"
SECRET="$(jq --raw-output '.secret // "terraform"' .tfconfig)"
TARGET="$(jq --raw-output '.target // "config.tf"' .tfconfig)"
EXTRA_REGIONS=()
NUM_EXTRA_REGIONS=$(jq '.extra_regions | length' .tfconfig)
for i in $(seq 0 $((NUM_EXTRA_REGIONS-1))); do
  EXTRA_REGIONS+=($(jq --raw-output ".extra_regions[${i}]" .tfconfig))
done

# Get the Terraform configuration information from the AWS secret.
INFO_JSON=$(aws --profile "${PROFILE}" secretsmanager get-secret-value --secret-id ${SECRET} \
  | jq --exit-status --raw-output .SecretString)
[[ -z "${INFO_JSON}" ]] && echo "Couldn't get Terraform information." && exit 1
ACCESS_KEY=$(jq --exit-status --raw-output .access_key <<< ${INFO_JSON})
BUCKET=$(jq --exit-status --raw-output .bucket <<< ${INFO_JSON})
LOCK_TABLE=$(jq --exit-status --raw-output .lock_table <<< ${INFO_JSON})
REGION=$(jq --exit-status --raw-output .region <<< ${INFO_JSON})
SECRET_KEY=$(jq --exit-status --raw-output .secret_key <<< ${INFO_JSON})

# Write the config file.
cat << EOF > "${TARGET}"
# Generated by tfconfig on $(date).
# Do not modify this file manually.
# Do not commit this file in source control.

terraform {
  backend "s3" {
    encrypt        = true
    bucket         = "${BUCKET}"
    region         = "${REGION}"
    dynamodb_table = "${LOCK_TABLE}"
    access_key     = "${ACCESS_KEY}"
    secret_key     = "${SECRET_KEY}"
    key            = "${KEY}"
  }
}

provider "aws" {
  access_key = "${ACCESS_KEY}"
  secret_key = "${SECRET_KEY}"
  region     = "${REGION}"
}

EOF

for EXTRA_REGION in "${EXTRA_REGIONS[@]}"; do
  cat << EOF >> "${TARGET}"
provider "aws" {
  access_key = "${ACCESS_KEY}"
  secret_key = "${SECRET_KEY}"
  region     = "${EXTRA_REGION}"
  alias      = "${EXTRA_REGION}"
}

EOF
done
